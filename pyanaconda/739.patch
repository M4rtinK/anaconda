From e7bd084226490844b5790b6013d8ceacb3c19078 Mon Sep 17 00:00:00 2001
From: Phil Dibowitz <phil@ipom.com>
Date: Tue, 16 Aug 2016 11:38:43 -0700
Subject: [PATCH 1/3] Fix EFI grub1 case

---
 pyanaconda/bootloader.py | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/pyanaconda/bootloader.py b/pyanaconda/bootloader.py
index 76c8518..f30a9b5 100644
--- a/pyanaconda/bootloader.py
+++ b/pyanaconda/bootloader.py
@@ -1783,6 +1783,12 @@ class EFIGRUB1(EFIBase, GRUB):
     stage2_bootable = False
     stage2_max_end_mb = None
 
+    _efi_binary = "\\grub.efi"
+
+    def __init__(self):
+        super(EFIGRUB1, self).__init__()
+        self.efi_dir = 'BOOT'
+
     #
     # configuration
     #

From 2288ef45ff729f5e24de1a193f28c3ada490d904 Mon Sep 17 00:00:00 2001
From: Phil Dibowitz <phil@ipom.com>
Date: Tue, 16 Aug 2016 21:09:08 -0700
Subject: [PATCH 2/3] efiboot: stderr= is not an option to efibootmgr

---
 pyanaconda/bootloader.py | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/pyanaconda/bootloader.py b/pyanaconda/bootloader.py
index f30a9b5..f0f3b80 100644
--- a/pyanaconda/bootloader.py
+++ b/pyanaconda/bootloader.py
@@ -1799,7 +1799,7 @@ def efi_product_path(self):
 
             eg: HD(1,800,64000,faacb4ef-e361-455e-bd97-ca33632550c3)
         """
-        buf = self.efibootmgr("-v", stderr="/dev/tty5", capture=True)
+        buf = self.efibootmgr("-v", capture=True)
         matches = re.search(productName + r'\s+(HD\(.+?\))', buf)
         if matches and matches.groups():
             return matches.group(1)

From 481471f28d165203835aaaeab553fc6d4688f1ad Mon Sep 17 00:00:00 2001
From: Phil Dibowitz <phil@ipom.com>
Date: Tue, 16 Aug 2016 19:22:12 -0700
Subject: [PATCH 3/3] Add option to override efi_dir

This is because in CentOS6, the efi_dir is actually 'redhat', not 'centos'.
---
 pyanaconda/bootloader.py | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

diff --git a/pyanaconda/bootloader.py b/pyanaconda/bootloader.py
index f0f3b80..bcd783d 100644
--- a/pyanaconda/bootloader.py
+++ b/pyanaconda/bootloader.py
@@ -1677,7 +1677,10 @@ def check(self):
 class EFIBase(object):
     @property
     def _config_dir(self):
-        return "efi/EFI/%s" % (self.efi_dir,) # pylint: disable=no-member
+        efi_dir = self.efi_dir
+        if flags.cmdline.get("force_efi_dir") is not None:
+            efi_dir = flags.cmdline.get("force_efi_dir")
+        return "efi/EFI/%s" % (efi_dir,) # pylint: disable=no-member
 
     def efibootmgr(self, *args, **kwargs):
         if flags.imageInstall or flags.dirInstall:
@@ -1788,6 +1791,8 @@ class EFIGRUB1(EFIBase, GRUB):
     def __init__(self):
         super(EFIGRUB1, self).__init__()
         self.efi_dir = 'BOOT'
+        if flags.cmdline.get("force_efi_dir") is not None:
+            self.efi_dir = flags.cmdline.get("force_efi_dir")
 
     #
     # configuration
@@ -2376,7 +2381,10 @@ def writeSysconfigKernel(storage, version, instClass):
     kernel_basename = "vmlinuz-" + version
     kernel_file = "/boot/%s" % kernel_basename
     if not os.path.isfile(iutil.getSysroot() + kernel_file):
-        kernel_file = "/boot/efi/EFI/%s/%s" % (instClass.efi_dir, kernel_basename)
+        efi_dir = instClass.efi_dir
+        if flags.cmdline.get("force_efi_dir") is not None:
+            efi_dir = flags.cmdline.get("force_efi_dir")
+        kernel_file = "/boot/efi/EFI/%s/%s" % (efi_dir, kernel_basename)
         if not os.path.isfile(iutil.getSysroot() + kernel_file):
             log.error("failed to recreate path to default kernel image")
             return
